---
title: "More YAML"
author: "Danping"
format: 
    html:
        #styling options
        theme: default
        # code block options
        highlight-style: "breeze"
        code-line-numbers: true
        code-tools: true
        code-fold: show
        code-overflow: "wrap" #Other option: scroll
        # execution options
        echo: true
        eval: true
        warning: false
        error: false
---

## Hands-on #3

### Instructions {#instruction}

Use the Quarto document you created earlier, try different YAML options and render the document to see the resulting changes on the output document. (Make sure to have different level headings, some text, and some code!) Refer to [code chunk](#sample-code)

**Table of Contents**

-   Add your table of contents `toc: true`
-   change the depth of your Table of Contents, e.g. `toc-depth: 3`
-   type `number-sections` and click on 'TAB'. What do you see? What does this YAML option do?
-   change to other format, e.g. html, PDF, pptx, does the layout change?

**Look & Feel**

-   Pick a [HTML theme](https://quarto.org/docs/output-formats/html-themes.html) at this link to be applied on your document, e.g. `theme: "chosen theme"`
-   render with terminal and Quarto console

**Code & Execution**

Try the YAML options below and find out what they do. Copy the \@

```         
    highlight-style: "breeze"
    code-line-numbers: 
    code-tools: 
    code-fold:          #press TAB to see available options
    code-overflow:      #press TAB to see available options
    echo: 
    eval: 
    warning:
    error:
```

#### code & execution related settings

**Code Fold**: true\|false\|show (fold but initially shown)

```         
format:
  html:
    code-fold: true
    code-summary: "Show the code"
```

**Code Overflow**: wrap\|scroll

```         
format:
  html:
    code-overflow: wrap
```

**Code Tools**: include tools for readers to copy codes or interact with your document

```         
format:
  html:
    code-fold: true
```

```{r}
#| label: sample-code
library(tidyverse)
library(palmerpenguins)
ggplot(penguins, 
       aes(x = flipper_length_mm, y = bill_length_mm)) +
  geom_point(aes(color = species, shape = species)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(
    title = "Flipper and bill length",
    subtitle = "Dimensions for penguins at Palmer Station LTER",
    x = "Flipper length (mm)", y = "Bill length (mm)",
    color = "Penguin species", shape = "Penguin species"
  ) +
  theme_minimal()
```

Refer to [#instruction](#instruction)
