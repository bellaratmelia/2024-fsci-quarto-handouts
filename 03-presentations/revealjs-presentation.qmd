---
title: "Presentation with RevealJS"
format: revealjs
author: "Bella"
---

## Hands-on: Tinkering with RevealJS

### Instructions:

1.  Amend the YAML header to include the following options:
    1.  Change the width to 1920px and height to 1080px
    2.  Make the slides scrollable
    3.  Add slide numbers
2.  Add a new slide with bullet points listing the types of diamond cuts (or you can lists other things that you prefer)
3.  Edit all code chunks (except for the load-library code chunk) such that the codes appear on the slides
4.  Add code annotations on "Correlation" slide, and make the annotations appear incrementally.
5.  Highlight the `tbl_summary` portion inside `view-summary` code chunk.
6.  Change the theme to any of the following theme: beige, blood, dark, league, moon, night, serif, simple, sky, or solarized.
7.  Explore other options to change the slides to your liking! e.g. change the background, split the slides into two columns, etc.

## The Diamonds dataset

```{r}
#| label: load-library
#| lst-label: lst-loadlib
#| lst-cap: Load libraries
#| echo: true

library(tidyverse)
library(corrplot)
library(gtsummary)
```

The dataset, available through `ggplot2` package, contains the prices and other attributes of over 50,000 round cut diamonds, specifically 53,940 diamonds. It includes various details such as the price, weight, cut quality, color, clarity, and dimensions of the diamonds. Below is a table detailing the variables included in the dataset:

| **Variable** | **Description**                                                                                   |
|--------------|---------------------------------------------------------------------------------------------------|
| price        | Price in US dollars (\$326–\$18,823)                                                              |
| carat        | Weight of the diamond (0.2–5.01)                                                                  |
| cut          | Quality of the cut (Fair, Good, Very Good, Premium, Ideal)                                        |
| color        | Diamond color, from D (best) to J (worst)                                                         |
| clarity      | A measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best)) |
| x            | Length in mm (0–10.74)                                                                            |
| y            | Width in mm (0–58.9)                                                                              |
| z            | Depth in mm (0–31.8)                                                                              |
| depth        | Total depth percentage = z / mean(x, y) = 2 \* z / (x + y) (43–79)                                |
| table        | Width of top of diamond relative to widest point (43–95)                                          |

## Diamonds overview

```{r}
#| label: view-data


head(diamonds)
```

## Descriptive statistics for numeric variables

mean, median, and standard deviation for `price` and `carat`:

```{r}
#| label: view-summary


diamonds %>% 
  tbl_summary(
    include = c(price, carat, x, y, depth, table),
    by = cut
  ) %>% 
    add_n()

```

## Histogram of Diamond prices

```{r}
#| label: visualize-data


ggplot(diamonds, aes(x = price)) +
  geom_histogram(binwidth = 500, fill = "blue", color = "black") +
  labs(title = "Histogram of Diamond Prices", x = "Price (USD)", y = "Frequency")
```

## Distribution of prices for each cut category

```{r}
#| label: boxplot-data
ggplot(diamonds, aes(x = cut, y = price)) +
  geom_boxplot(fill = "lightblue") +
  labs(title = "Boxplot of Diamond Price by Cut", x = "Cut", y = "Price (USD)")
```

## Correlations {background-color="black"}

Correlation matrix for numeric variables:

```{r}
#| label: corr-data


numeric_vars <- diamonds %>% select(price, carat, x, y, z, depth, table)
cor_matrix <- cor(numeric_vars)

corrplot(cor_matrix, method = "circle")
```

## Simple Regression

Does a diamond's carat affect its price?

```{r}
#| label: reg-data
model_price <- lm(price ~ carat + depth, data = diamonds)

table_carat <- tbl_regression(model_price)
table_carat
```
